import{_ as s,e as a,f as p,o as t}from"./app-6fE1y3uD.js";const e={};function l(i,n){return t(),a("div",null,n[0]||(n[0]=[p(`<h1 id="支持更多测试库" tabindex="-1"><a class="header-anchor" href="#支持更多测试库"><span>支持更多测试库</span></a></h1><p>seldom 集成了<code>selenium</code>、<code>appium</code>、<code>requests</code>，他们都是非常优秀且成熟的库，这并不是说，你不能在seldom使用其他的测试库。</p><p>seldom 作为一个测试框架，理论上可以与任何测试库一起使用。seldom提供的基础能力（数据驱动、随机数、测试报告、缓存...等）同样可以提升这些测试库的使用效率。</p><h3 id="使用playwright" tabindex="-1"><a class="header-anchor" href="#使用playwright"><span>使用playwright</span></a></h3><p>playwright就微软推出的优秀的 web UI 自动化测试库。</p><p>官方地址: https://playwright.dev/</p><ul><li>pip安装Playwright</li></ul><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token operator">&gt;</span> pip <span class="token function">install</span> playwright</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>playwright 安装浏览器以及驱动</li></ul><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token operator">&gt;</span> playwright <span class="token function">install</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>使用例子</li></ul><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token keyword">import</span> seldom</span>
<span class="line"><span class="token keyword">from</span> playwright<span class="token punctuation">.</span>sync_api <span class="token keyword">import</span> sync_playwright</span>
<span class="line"><span class="token keyword">from</span> playwright<span class="token punctuation">.</span>sync_api <span class="token keyword">import</span> expect</span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">Playwright</span><span class="token punctuation">(</span>seldom<span class="token punctuation">.</span>TestCase<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">start</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        self<span class="token punctuation">.</span>p <span class="token operator">=</span> sync_playwright<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>start<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        self<span class="token punctuation">.</span>chromium <span class="token operator">=</span> self<span class="token punctuation">.</span>p<span class="token punctuation">.</span>chromium<span class="token punctuation">.</span>launch<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        self<span class="token punctuation">.</span>page <span class="token operator">=</span> self<span class="token punctuation">.</span>chromium<span class="token punctuation">.</span>new_page<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">end</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        self<span class="token punctuation">.</span>chromium<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        self<span class="token punctuation">.</span>p<span class="token punctuation">.</span>stop<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">test_playwright_start</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token triple-quoted-string string">&quot;&quot;&quot;</span>
<span class="line">        test playwright index page</span>
<span class="line">        &quot;&quot;&quot;</span></span>
<span class="line">        self<span class="token punctuation">.</span>page<span class="token punctuation">.</span>goto<span class="token punctuation">(</span><span class="token string">&quot;http://playwright.dev&quot;</span><span class="token punctuation">)</span></span>
<span class="line">        expect<span class="token punctuation">(</span>self<span class="token punctuation">.</span>page<span class="token punctuation">)</span><span class="token punctuation">.</span>to_have_title<span class="token punctuation">(</span><span class="token string">&quot;Fast and reliable end-to-end testing for modern web apps | Playwright&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">        get_started <span class="token operator">=</span> self<span class="token punctuation">.</span>page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&#39;text=Get Started&#39;</span><span class="token punctuation">)</span></span>
<span class="line">        expect<span class="token punctuation">(</span>get_started<span class="token punctuation">)</span><span class="token punctuation">.</span>to_have_attribute<span class="token punctuation">(</span><span class="token string">&#39;href&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;/docs/intro&#39;</span><span class="token punctuation">)</span></span>
<span class="line">        get_started<span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">        expect<span class="token punctuation">(</span>self<span class="token punctuation">.</span>page<span class="token punctuation">)</span><span class="token punctuation">.</span>to_have_url<span class="token punctuation">(</span><span class="token string">&#39;http://playwright.dev/docs/intro&#39;</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token comment"># 截图</span></span>
<span class="line">        screenshot_bytes <span class="token operator">=</span> self<span class="token punctuation">.</span>page<span class="token punctuation">.</span>screenshot<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        self<span class="token punctuation">.</span>screenshots<span class="token punctuation">(</span>image<span class="token operator">=</span>screenshot_bytes<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">test_playwright_todo</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token triple-quoted-string string">&quot;&quot;&quot;</span>
<span class="line">        test playwright todoMVC</span>
<span class="line">        &quot;&quot;&quot;</span></span>
<span class="line">        self<span class="token punctuation">.</span>page<span class="token punctuation">.</span>goto<span class="token punctuation">(</span><span class="token string">&quot;https://demo.playwright.dev/todomvc/#/&quot;</span><span class="token punctuation">)</span></span>
<span class="line">        new_todo <span class="token operator">=</span> self<span class="token punctuation">.</span>page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;.new-todo&quot;</span><span class="token punctuation">)</span></span>
<span class="line">        new_todo<span class="token punctuation">.</span>fill<span class="token punctuation">(</span><span class="token string">&quot;sleep&quot;</span><span class="token punctuation">)</span></span>
<span class="line">        new_todo<span class="token punctuation">.</span>press<span class="token punctuation">(</span><span class="token string">&quot;Enter&quot;</span><span class="token punctuation">)</span></span>
<span class="line">        new_todo<span class="token punctuation">.</span>fill<span class="token punctuation">(</span><span class="token string">&quot;code&quot;</span><span class="token punctuation">)</span></span>
<span class="line">        new_todo<span class="token punctuation">.</span>press<span class="token punctuation">(</span><span class="token string">&quot;Enter&quot;</span><span class="token punctuation">)</span></span>
<span class="line">        new_todo<span class="token punctuation">.</span>fill<span class="token punctuation">(</span><span class="token string">&quot;eat&quot;</span><span class="token punctuation">)</span></span>
<span class="line">        new_todo<span class="token punctuation">.</span>press<span class="token punctuation">(</span><span class="token string">&quot;Enter&quot;</span><span class="token punctuation">)</span></span>
<span class="line">        self<span class="token punctuation">.</span>page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&#39;li&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">filter</span><span class="token punctuation">(</span>has_text<span class="token operator">=</span><span class="token string">&#39;code&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>get_by_label<span class="token punctuation">(</span><span class="token string">&#39;Toggle Todo&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>check<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        self<span class="token punctuation">.</span>page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&#39;li&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">filter</span><span class="token punctuation">(</span>has_text<span class="token operator">=</span><span class="token string">&#39;sleep&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>get_by_label<span class="token punctuation">(</span><span class="token string">&#39;Toggle Todo&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>check<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        self<span class="token punctuation">.</span>page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&#39;li&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">filter</span><span class="token punctuation">(</span>has_text<span class="token operator">=</span><span class="token string">&#39;eat&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>get_by_label<span class="token punctuation">(</span><span class="token string">&#39;Toggle Todo&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>check<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token comment"># 截图</span></span>
<span class="line">        screenshot_bytes <span class="token operator">=</span> self<span class="token punctuation">.</span>page<span class="token punctuation">.</span>screenshot<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        self<span class="token punctuation">.</span>screenshots<span class="token punctuation">(</span>image<span class="token operator">=</span>screenshot_bytes<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span></span>
<span class="line">    seldom<span class="token punctuation">.</span>main<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="使用uiautomator2" tabindex="-1"><a class="header-anchor" href="#使用uiautomator2"><span>使用uiautomator2</span></a></h3><p>uiautomator2是openatx推出的优秀的Android自动化测试工具，Api简单，同样得到广泛应用。</p><p>github地址: https://github.com/openatx/uiautomator2</p><ul><li>pip安装</li></ul><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line">pip <span class="token function">install</span> uiautomator2</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>使用例子</li></ul><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token keyword">import</span> seldom</span>
<span class="line"><span class="token keyword">from</span> seldom<span class="token punctuation">.</span>extend_lib<span class="token punctuation">.</span>adb <span class="token keyword">import</span> get_devices</span>
<span class="line"><span class="token keyword">import</span> uiautomator2 <span class="token keyword">as</span> u2</span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">MyAppTest</span><span class="token punctuation">(</span>seldom<span class="token punctuation">.</span>TestCase<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">start</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token comment"># 链接设备</span></span>
<span class="line">        self<span class="token punctuation">.</span>d <span class="token operator">=</span> u2<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>self<span class="token punctuation">.</span>device<span class="token punctuation">)</span></span>
<span class="line">        <span class="token comment"># 启动App</span></span>
<span class="line">        self<span class="token punctuation">.</span>d<span class="token punctuation">.</span>app_start<span class="token punctuation">(</span><span class="token string">&quot;com.microsoft.bing&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">end</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token comment"># 停止app</span></span>
<span class="line">        self<span class="token punctuation">.</span>d<span class="token punctuation">.</span>app_stop<span class="token punctuation">(</span><span class="token string">&quot;com.microsoft.bing&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">test_bing_app</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token triple-quoted-string string">&quot;&quot;&quot; 使用 uiautomator2 &quot;&quot;&quot;</span></span>
<span class="line">        self<span class="token punctuation">.</span>d<span class="token punctuation">(</span>resourceId<span class="token operator">=</span><span class="token string">&quot;com.microsoft.bing:id/sa_hp_header_search_box&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        self<span class="token punctuation">.</span>d<span class="token punctuation">(</span>resourceId<span class="token operator">=</span><span class="token string">&quot;com.microsoft.bing:id/input_container&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>set_text<span class="token punctuation">(</span><span class="token string">&quot;seldomQA&quot;</span><span class="token punctuation">)</span></span>
<span class="line">        self<span class="token punctuation">.</span>d<span class="token punctuation">(</span>resourceId<span class="token operator">=</span><span class="token string">&quot;com.microsoft.bing:id/input_container&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>center<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token comment"># ....</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span></span>
<span class="line">    devices <span class="token operator">=</span> get_devices<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    seldom<span class="token punctuation">.</span>main<span class="token punctuation">(</span>debug<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> device<span class="token operator">=</span>devices<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="使用pyautogui" tabindex="-1"><a class="header-anchor" href="#使用pyautogui"><span>使用pyAutoGUI</span></a></h3><p>pyAutoGUI专注于模拟鼠标和键盘操作，实现GUI的自动化。 适用于需要在多个操作系统（Windows、macOS、Linux）上模拟用户输入（如点击、拖动、输入文本等）的场景，如自动化测试、数据录入、游戏辅助等。</p><p>官方地址: https://github.com/asweigart/pyautogui</p><ul><li>pip安装pyAutoGUI</li></ul><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token operator">&gt;</span> pip <span class="token function">install</span> pyautogui</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>使用例子</li></ul><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token keyword">import</span> os</span>
<span class="line"><span class="token keyword">import</span> pyautogui</span>
<span class="line"><span class="token keyword">import</span> seldom</span>
<span class="line"><span class="token keyword">from</span> seldom<span class="token punctuation">.</span>testdata <span class="token keyword">import</span> get_int</span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">TestPyAutoGUINote</span><span class="token punctuation">(</span>seldom<span class="token punctuation">.</span>TestCase<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">start</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token comment"># 打开记事本（这里使用运行命令来打开，确保路径正确）</span></span>
<span class="line">        os<span class="token punctuation">.</span>system<span class="token punctuation">(</span><span class="token string">&#39;notepad.exe&#39;</span><span class="token punctuation">)</span></span>
<span class="line">        self<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">end</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token comment"># 模拟按下 Alt+F4 关闭记事本</span></span>
<span class="line">        pyautogui<span class="token punctuation">.</span>hotkey<span class="token punctuation">(</span><span class="token string">&#39;alt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;f4&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">test_write_and_save</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token triple-quoted-string string">&quot;&quot;&quot;</span>
<span class="line">        打开一个新的标签页写入内容并保存</span>
<span class="line">        &quot;&quot;&quot;</span></span>
<span class="line">        <span class="token comment"># 模拟按下 Ctrl+t 创建一个新的标签页</span></span>
<span class="line">        pyautogui<span class="token punctuation">.</span>hotkey<span class="token punctuation">(</span><span class="token string">&#39;ctrl&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;t&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">        self<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        pyautogui<span class="token punctuation">.</span>press<span class="token punctuation">(</span><span class="token string">&#39;shift&#39;</span><span class="token punctuation">)</span>  <span class="token comment"># 切换英文输入法</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment"># 写入字符串到记事本</span></span>
<span class="line">        pyautogui<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">&#39;Hello, this is a test string written by pyautogui.&#39;</span><span class="token punctuation">,</span> interval<span class="token operator">=</span><span class="token number">0.1</span><span class="token punctuation">)</span>  <span class="token comment"># interval 参数设置每个字符之间的延迟时间</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment"># 模拟按下 Ctrl+S 保存文件</span></span>
<span class="line">        pyautogui<span class="token punctuation">.</span>hotkey<span class="token punctuation">(</span><span class="token string">&#39;ctrl&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;s&#39;</span><span class="token punctuation">)</span></span>
<span class="line">        self<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment"># 切换英文输入法</span></span>
<span class="line">        pyautogui<span class="token punctuation">.</span>press<span class="token punctuation">(</span><span class="token string">&#39;shift&#39;</span><span class="token punctuation">)</span></span>
<span class="line">        self<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment"># 输入文件名 + 回车确定</span></span>
<span class="line">        pyautogui<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;test_file</span><span class="token interpolation"><span class="token punctuation">{</span>get_int<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">.txt&#39;</span></span><span class="token punctuation">)</span></span>
<span class="line">        self<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        pyautogui<span class="token punctuation">.</span>press<span class="token punctuation">(</span><span class="token string">&#39;enter&#39;</span><span class="token punctuation">)</span></span>
<span class="line">        self<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span></span>
<span class="line">    seldom<span class="token punctuation">.</span>main<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="使用auto-wing" tabindex="-1"><a class="header-anchor" href="#使用auto-wing"><span>使用auto-wing</span></a></h3><p>AI在自动化领域已经得到相关的应用，出现了不少项目（<code>browser-use</code>、<code>Midscene.js</code> 等）。auto-wing是一款基于LLM的自动化工具。可以很好的整合到seldom框架中使用。</p><p>GitHub地址: https://github.com/SeldomQA/auto-wing</p><ul><li>pip安装auto-wing</li></ul><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token operator">&gt;</span> pip <span class="token function">install</span> autowing</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>配置大模型 <code>API_key</code></li></ul><p>在脚本目录下创建<code>.env</code>文件，配置LLM的<code>API_key</code>， 支持多模型：<code>openai</code>、<code>deepseek</code>、<code>qwen</code> 和 <code>doubao</code>。这里以 <code>deepseek</code>为例。</p><div class="language-env line-numbers-mode" data-highlighter="prismjs" data-ext="env"><pre><code><span class="line">.env</span>
<span class="line">AUTOWING_MODEL_PROVIDER=deepseek</span>
<span class="line">DEEPSEEK_API_KEY=sk-abdefghijklmnopqrstwvwxyz0123456789</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>使用例子</li></ul><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token keyword">import</span> seldom</span>
<span class="line"><span class="token keyword">from</span> seldom <span class="token keyword">import</span> Seldom</span>
<span class="line"><span class="token keyword">from</span> autowing<span class="token punctuation">.</span>selenium<span class="token punctuation">.</span>fixture <span class="token keyword">import</span> create_fixture</span>
<span class="line"><span class="token keyword">from</span> dotenv <span class="token keyword">import</span> load_dotenv</span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">TestBingSearch</span><span class="token punctuation">(</span>seldom<span class="token punctuation">.</span>TestCase<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line"></span>
<span class="line">    <span class="token decorator annotation punctuation">@classmethod</span></span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">start_class</span><span class="token punctuation">(</span>cls<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token comment"># load .env file</span></span>
<span class="line">        load_dotenv<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token comment"># Create AI fixture</span></span>
<span class="line">        ai_fixture <span class="token operator">=</span> create_fixture<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        cls<span class="token punctuation">.</span>ai <span class="token operator">=</span> ai_fixture<span class="token punctuation">(</span>Seldom<span class="token punctuation">.</span>driver<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">test_bing_search</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token triple-quoted-string string">&quot;&quot;&quot;</span>
<span class="line">        Test Bing search functionality using AI-driven automation.</span>
<span class="line">        &quot;&quot;&quot;</span></span>
<span class="line">        self<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&quot;https://cn.bing.com&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">        self<span class="token punctuation">.</span>ai<span class="token punctuation">.</span>ai_action<span class="token punctuation">(</span><span class="token string">&#39;搜索输入框输入&quot;playwright&quot;关键字，并回车&#39;</span><span class="token punctuation">)</span></span>
<span class="line">        self<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">        items <span class="token operator">=</span> self<span class="token punctuation">.</span>ai<span class="token punctuation">.</span>ai_query<span class="token punctuation">(</span><span class="token string">&#39;string[], 搜索结果列表中包含&quot;playwright&quot;相关的标题&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">        self<span class="token punctuation">.</span>assertGreater<span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>items<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">        self<span class="token punctuation">.</span>assertTrue<span class="token punctuation">(</span></span>
<span class="line">            self<span class="token punctuation">.</span>ai<span class="token punctuation">.</span>ai_assert<span class="token punctuation">(</span><span class="token string">&#39;检查搜索结果列表第一条标题是否包含&quot;playwright&quot;字符串&#39;</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span></span>
<span class="line">    seldom<span class="token punctuation">.</span>main<span class="token punctuation">(</span>browser<span class="token operator">=</span><span class="token string">&quot;edge&quot;</span><span class="token punctuation">,</span> debug<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,36)]))}const o=s(e,[["render",l],["__file","test_library.html.vue"]]),u=JSON.parse('{"path":"/more-ability/test_library.html","title":"支持更多测试库","lang":"en-US","frontmatter":{},"headers":[{"level":3,"title":"使用playwright","slug":"使用playwright","link":"#使用playwright","children":[]},{"level":3,"title":"使用uiautomator2","slug":"使用uiautomator2","link":"#使用uiautomator2","children":[]},{"level":3,"title":"使用pyAutoGUI","slug":"使用pyautogui","link":"#使用pyautogui","children":[]},{"level":3,"title":"使用auto-wing","slug":"使用auto-wing","link":"#使用auto-wing","children":[]}],"git":{"updatedTime":1742121997000,"contributors":[{"name":"defnngj","username":"defnngj","email":"defnngj@gmail.com","commits":4,"url":"https://github.com/defnngj"}],"changelog":[{"hash":"ee7baed8f0cfa8c864d38c5c4149c1151a357c5e","time":1742121997000,"email":"defnngj@gmail.com","author":"defnngj","message":"📝 update doc"},{"hash":"e0588778141610ba70618b969a3a5399cb9734c5","time":1741702757000,"email":"defnngj@gmail.com","author":"defnngj","message":"📝️ add auto-wing library doc."},{"hash":"2317ca89197a2282bb877637b191047e99de9f10","time":1731320624000,"email":"defnngj@gmail.com","author":"defnngj","message":"📝️ add test library doc."},{"hash":"5d87095780044718a18220a28dfae5350eb2aa14","time":1690700993000,"email":"defnngj@gmail.com","author":"defnngj","message":"📝️ test library demo."}]},"filePathRelative":"more-ability/test_library.md"}');export{o as comp,u as data};
