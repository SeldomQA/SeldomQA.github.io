import{_ as s,e as a,f as e,o as p}from"./app-CJFllaMF.js";const t={};function o(l,n){return p(),a("div",null,n[0]||(n[0]=[e(`<h1 id="基准测试" tabindex="-1"><a class="header-anchor" href="#基准测试"><span>基准测试</span></a></h1><p>基准测试属于性能测试的一种，用于评估和衡量软件的性能指标。我们可以在软件开发的某个阶段通过基准测试建立一个已知的性能水平，称为&quot; 基准线&quot;。当系统的软硬件环境发生变化之后再进行一次基准测试以确定那些变化对性能的影响。__这是基准测试最常见的用途。</p><p>Donald Knuth在1974年出版的《Structured Programming with go to Statements》提到：</p><blockquote><p>毫无疑问，对效率的片面追求会导致各种滥用。程序员会浪费大量的时间在非关键程序的速度上，实际上这些尝试提升效率的行为反倒可能产生很大的负面影响，特别是当调试和维护的时候。我们不应该过度纠结于细节的优化，应该说约97%的场景：过早的优化是万恶之源。当然我们也不应该放弃对那关键3%的优化。一个好的程序员不会因为这个比例小就裹足不前，他们会明智地观察和识别哪些是关键的代码；但是仅当关键代码已经被确认的前提下才会进行优化。对于很多程序员来说，判断哪部分是关键的性能瓶颈，是很容易犯经验上的错误的，因此一般应该借助测量工具来证明。</p></blockquote><p>虽然经常被解读为不需要关心性能，但是的少部分情况下（3%）应该观察和识别关键代码并进行优化。</p><h2 id="进行基准测试" tabindex="-1"><a class="header-anchor" href="#进行基准测试"><span>进行基准测试</span></a></h2><p>在某些情况下，需要进行，seldom 提供了基准测试的功能。</p><p><strong>示例</strong></p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token keyword">import</span> time</span>
<span class="line"><span class="token keyword">import</span> seldom</span>
<span class="line"><span class="token keyword">from</span> seldom<span class="token punctuation">.</span>testdata <span class="token keyword">import</span> get_int</span>
<span class="line"><span class="token keyword">from</span> seldom<span class="token punctuation">.</span>utils<span class="token punctuation">.</span>benchmark <span class="token keyword">import</span> benchmark_test</span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">MyTests</span><span class="token punctuation">(</span>seldom<span class="token punctuation">.</span>TestCase<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line"></span>
<span class="line">    <span class="token decorator annotation punctuation">@benchmark_test</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">test_something_performance_1</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token triple-quoted-string string">&quot;&quot;&quot;</span>
<span class="line">        something code performance</span>
<span class="line">        &quot;&quot;&quot;</span></span>
<span class="line">        num <span class="token operator">=</span> get_int<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">1000</span></span>
<span class="line">        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span>num<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token decorator annotation punctuation">@benchmark_test</span><span class="token punctuation">(</span>rounds<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">,</span> iterations<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">test_something_performance_2</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token triple-quoted-string string">&quot;&quot;&quot;</span>
<span class="line">        something code performance</span>
<span class="line">        &quot;&quot;&quot;</span></span>
<span class="line">        num <span class="token operator">=</span> get_int<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">1000</span></span>
<span class="line">        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span>num<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token decorator annotation punctuation">@benchmark_test</span><span class="token punctuation">(</span>rounds<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">test_http_performance</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token triple-quoted-string string">&quot;&quot;&quot;</span>
<span class="line">        test http benchmark</span>
<span class="line">        &quot;&quot;&quot;</span></span>
<span class="line">        self<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&quot;https://httpbin.org/get&quot;</span><span class="token punctuation">)</span></span>
<span class="line">        self<span class="token punctuation">.</span>assertStatusOk<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&quot;__main__&quot;</span><span class="token punctuation">:</span></span>
<span class="line">    seldom<span class="token punctuation">.</span>main<span class="token punctuation">(</span>benchmark<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行结果：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token operator">&gt;</span> python test_benchmark.py</span>
<span class="line"></span>
<span class="line"><span class="token punctuation">..</span>.</span>
<span class="line"></span>
<span class="line"><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span> benchmark: <span class="token number">3</span> tests <span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span></span>
<span class="line">Name <span class="token punctuation">(</span>time <span class="token keyword">in</span> s<span class="token punctuation">)</span>             Min     Max    Mean  StdDev  Median     IQR  Outliers     OPS  Rounds  Iterations</span>
<span class="line">--------------------------------------------------------------------------------------------------------------</span>
<span class="line">test_http_performance  <span class="token number">0.9126</span>  <span class="token number">3.0273</span>  <span class="token number">1.3924</span>  <span class="token number">0.5931</span>  <span class="token number">1.2281</span>  <span class="token number">0.5033</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token number">9</span>         <span class="token number">0.7182</span>      <span class="token number">10</span>          <span class="token number">1</span></span>
<span class="line">test_something_performance_1  <span class="token number">0.1354</span>  <span class="token number">1.8026</span>  <span class="token number">0.7440</span>  <span class="token number">0.6109</span>  <span class="token number">0.5856</span>  <span class="token number">0.7842</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token number">4</span>         <span class="token number">1.3441</span>       <span class="token number">5</span>          <span class="token number">1</span></span>
<span class="line">test_something_performance_2  <span class="token number">0.6498</span>  <span class="token number">1.8315</span>  <span class="token number">1.1404</span>  <span class="token number">0.4289</span>  <span class="token number">1.0993</span>  <span class="token number">0.7592</span> <span class="token number">5</span><span class="token punctuation">;</span><span class="token number">5</span>         <span class="token number">0.8769</span>      <span class="token number">10</span>          <span class="token number">2</span></span>
<span class="line">--------------------------------------------------------------------------------------------------------------</span>
<span class="line">Legend:</span>
<span class="line">  Outliers: <span class="token number">1</span> Standard Deviation from Mean<span class="token punctuation">;</span> <span class="token number">1.5</span> IQR <span class="token punctuation">(</span>InterQuartile Range<span class="token punctuation">)</span> from 1st Quartile and 3rd Quartile.</span>
<span class="line">  OPS: Operations Per Second, computed as <span class="token number">1</span> / Mean</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>说明</strong></p><ul><li><p><code>@benchmark_test()</code>: 基准测试装饰器：</p><ul><li><code>rounds</code>: 运行基准测试的轮数，默认参数为<code>5</code>。</li><li><code>iterations</code>: 每轮调用函数的次数，默认参数为 <code>1</code>。</li></ul></li><li><p><code>main()</code>运行方法中，<code>branch</code>参数必须设置为<code>True</code>，且不支持生成HTML报告。</p></li><li><p>基准测试结果说明</p><ul><li><code>Min</code>: 最小执行时间，单位为秒s。</li><li><code>Max</code>: 最大执行时间，单位为秒s。</li><li><code>Minean</code>: 该测试运行过程中的平均执行时间，单位为秒s。</li><li><code>StdDev</code>: 标准差，表示测试执行时间的离散程度或波动性。较大的标准差意味着测试结果波动较大。。</li><li><code>Median</code>: 中位数，表示排序后所有执行时间的中间值。它用于衡量数据的集中趋势，避免极端值（如最大或最小值）影响结果。</li><li><code>IQR</code>: 四分位距，表示第 75 百分位数和第 25 百分位数之间的差距。它反映了数据的分布范围。</li><li><code>Outliers</code>: 异常值的数量，以及非异常值的数量。异常值的定义通常是距离均值超过 1 个标准差，或者距离第一四分位数和第三四分位数超过 1.5 倍 IQR。</li><li><code>OPS</code>: 每秒操作数，计算公式是 1 / Mean。它衡量每秒能够执行的操作次数，越高代表性能越好。</li><li><code>Rounds</code>: 运行基准测试的轮数，默认参数为<code>5</code>。</li><li><code>Iterations</code>: 每轮调用函数的次数，默认参数为 <code>1</code>。</li></ul></li></ul>`,13)]))}const i=s(t,[["render",o],["__file","benchmark.html.vue"]]),r=JSON.parse('{"path":"/more-ability/benchmark.html","title":"基准测试","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"进行基准测试","slug":"进行基准测试","link":"#进行基准测试","children":[]}],"git":{"updatedTime":1736177823000,"contributors":[{"name":"defnngj","username":"defnngj","email":"defnngj@gmail.com","commits":1,"url":"https://github.com/defnngj"}],"changelog":[{"hash":"d488c7463a8c90c519024fdfbc834aaff4434b45","time":1736177823000,"email":"defnngj@gmail.com","author":"defnngj","message":"📝 benchmark test doc"}]},"filePathRelative":"more-ability/benchmark.md"}');export{i as comp,r as data};
