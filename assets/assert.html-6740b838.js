import{_ as n,o as s,c as a,e as t}from"./app-05b2f541.js";const p={},o=t(`<h1 id="更强大的断言" tabindex="-1"><a class="header-anchor" href="#更强大的断言" aria-hidden="true">#</a> 更强大的断言</h1><p>断言接口返回的数据是HTTP接口自动化测试非常重要的工作，提供强大的断言方法可以提高用例的编写效率。</p><h3 id="assertjson" tabindex="-1"><a class="header-anchor" href="#assertjson" aria-hidden="true">#</a> assertJSON</h3><p><code>assertJSON()</code> 断言接口返回的某部分数据。</p><ul><li>请求参数</li></ul><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;tom&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;hobby&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token string">&quot;basketball&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;swim&quot;</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>返回结果</li></ul><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;args&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;hobby&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token string">&quot;basketball&quot;</span><span class="token punctuation">,</span>
      <span class="token string">&quot;swim&quot;</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;tom&quot;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;headers&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;Accept&quot;</span><span class="token operator">:</span> <span class="token string">&quot;*/*&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;Accept-Encoding&quot;</span><span class="token operator">:</span> <span class="token string">&quot;gzip, deflate&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;Host&quot;</span><span class="token operator">:</span> <span class="token string">&quot;httpbin.org&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;User-Agent&quot;</span><span class="token operator">:</span> <span class="token string">&quot;python-requests/2.25.0&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;X-Amzn-Trace-Id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Root=1-62851614-1ca9fdb276238c60406c118f&quot;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;origin&quot;</span><span class="token operator">:</span> <span class="token string">&quot;113.87.15.99&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;url&quot;</span><span class="token operator">:</span> <span class="token string">&quot;http://httpbin.org/get?name=tom&amp;hobby=basketball&amp;hobby=swim&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我的目标是断言<code>name</code> 和 <code>hobby</code> 部分的内容。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> seldom


<span class="token keyword">class</span> <span class="token class-name">TestAPI</span><span class="token punctuation">(</span>seldom<span class="token punctuation">.</span>TestCase<span class="token punctuation">)</span><span class="token punctuation">:</span>

    <span class="token keyword">def</span> <span class="token function">test_assert_json</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token comment"># 接口参数</span>
        payload <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;tom&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;hobby&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">&quot;basketball&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;swim&quot;</span><span class="token punctuation">]</span><span class="token punctuation">}</span>
        <span class="token comment"># 接口调用</span>
        self<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&quot;http://httpbin.org/get&quot;</span><span class="token punctuation">,</span> params<span class="token operator">=</span>payload<span class="token punctuation">)</span>

        <span class="token comment"># 断言数据</span>
        assert_data <span class="token operator">=</span> <span class="token punctuation">{</span>
            <span class="token string">&quot;hobby&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">&quot;swim&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;basketball&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
            <span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;tom&quot;</span>
        <span class="token punctuation">}</span>
        self<span class="token punctuation">.</span>assertJSON<span class="token punctuation">(</span>assert_data<span class="token punctuation">,</span> self<span class="token punctuation">.</span>response<span class="token punctuation">[</span><span class="token string">&quot;args&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> exclude<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&quot;xxx&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>exclude 用于设置跳过的检查字段，例如一些 时间、随机数 等，每次调用都不一样，但并不影响结果的正确性。通过 exclude 来设置屏蔽这些字段的检查。</li></ul><h3 id="assertpath" tabindex="-1"><a class="header-anchor" href="#assertpath" aria-hidden="true">#</a> assertPath</h3><p><code>assertPath</code> 是基于 <code>jmespath</code> 实现的断言，功能非常强大。</p><ul><li>jmespath: https://jmespath.org/specification.html</li></ul><p>接口返回数据如下：</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;args&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;hobby&quot;</span><span class="token operator">:</span> 
      <span class="token punctuation">[</span><span class="token string">&quot;basketball&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;swim&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> 
    <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;tom&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>seldom中可以通过path进行断言：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> seldom


<span class="token keyword">class</span> <span class="token class-name">TestAPI</span><span class="token punctuation">(</span>seldom<span class="token punctuation">.</span>TestCase<span class="token punctuation">)</span><span class="token punctuation">:</span>

    <span class="token keyword">def</span> <span class="token function">test_assert_path</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        payload <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;tom&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;hobby&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">&#39;basketball&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;swim&#39;</span><span class="token punctuation">]</span><span class="token punctuation">}</span>
        self<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&quot;http://httpbin.org/get&quot;</span><span class="token punctuation">,</span> params<span class="token operator">=</span>payload<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>assertPath<span class="token punctuation">(</span><span class="token string">&quot;args.name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;tom&quot;</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>assertPath<span class="token punctuation">(</span><span class="token string">&quot;args.hobby[0]&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;basketball&quot;</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>assertInPath<span class="token punctuation">(</span><span class="token string">&quot;args.hobby[0]&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;ball&quot;</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>args.hobby[0]</code> 提取接口返回的数据。</li><li><code>assertPath()</code> 判断提取的数据是否等于<code>basketball</code>;</li><li><code>assertInPath()</code> 判断提取的数据是否包含<code>ball</code>。</li></ul><h3 id="assertschema" tabindex="-1"><a class="header-anchor" href="#assertschema" aria-hidden="true">#</a> assertSchema</h3><p>当你不关心数据本身是什么，而是关心数据的结构和类型时，可以使用 <code>assertSchema</code> 断言方法。 <code>assertSchema</code> 是基于 <code>jsonschema</code> 实现的断言方法。</p><ul><li>jsonschema: https://json-schema.org/learn/</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> seldom
<span class="token keyword">from</span> seldom<span class="token punctuation">.</span>utils <span class="token keyword">import</span> genson


<span class="token keyword">class</span> <span class="token class-name">TestAPI</span><span class="token punctuation">(</span>seldom<span class="token punctuation">.</span>TestCase<span class="token punctuation">)</span><span class="token punctuation">:</span>

    <span class="token keyword">def</span> <span class="token function">test_assert_schema</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token comment"># 接口参数</span>
        payload <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;hobby&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">&quot;basketball&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;swim&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;tom&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;age&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;18&quot;</span><span class="token punctuation">}</span>
        <span class="token comment"># 调用接口</span>
        self<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&quot;/get&quot;</span><span class="token punctuation">,</span> params<span class="token operator">=</span>payload<span class="token punctuation">)</span>

        <span class="token comment"># 生成数据结构和类型</span>
        schema <span class="token operator">=</span> genson<span class="token punctuation">(</span>self<span class="token punctuation">.</span>response<span class="token punctuation">[</span><span class="token string">&quot;args&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;json Schema: \\n&quot;</span><span class="token punctuation">,</span> schema<span class="token punctuation">)</span>

        <span class="token comment"># 断言数据结构和类型</span>
        assert_data <span class="token operator">=</span> <span class="token punctuation">{</span>
            <span class="token string">&quot;$schema&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;http://json-schema.org/schema#&quot;</span><span class="token punctuation">,</span>
            <span class="token string">&quot;type&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;object&quot;</span><span class="token punctuation">,</span>
            <span class="token string">&quot;properties&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>
                <span class="token string">&quot;age&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>
                    <span class="token string">&quot;type&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;string&quot;</span>
                <span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token string">&quot;hobby&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>
                    <span class="token string">&quot;type&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;array&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;items&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token string">&quot;type&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;string&quot;</span><span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>
                    <span class="token string">&quot;type&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;string&quot;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token string">&quot;required&quot;</span><span class="token punctuation">:</span>
                <span class="token punctuation">[</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;hobby&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;name&quot;</span><span class="token punctuation">]</span>
        <span class="token punctuation">}</span>
        self<span class="token punctuation">.</span>assertSchema<span class="token punctuation">(</span>assert_data<span class="token punctuation">,</span> self<span class="token punctuation">.</span>response<span class="token punctuation">[</span><span class="token string">&quot;args&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>genson</code>: 可以生成<code>jsonschema</code>数据结构和类型（<code>seldom 2.9</code> 新增）。</li></ul>`,24),e=[o];function c(u,i){return s(),a("div",null,e)}const r=n(p,[["render",c],["__file","assert.html.vue"]]);export{r as default};
