import{_ as n,e as a,f as e,o as t}from"./app-6fE1y3uD.js";const p={};function l(i,s){return t(),a("div",null,s[0]||(s[0]=[e(`<h1 id="http测试" tabindex="-1"><a class="header-anchor" href="#http测试"><span>HTTP测试</span></a></h1><h2 id="优势" tabindex="-1"><a class="header-anchor" href="#优势"><span>优势</span></a></h2><p>seldom 非常适合个人接口自动化项目，它有以下优势。</p><ul><li>可以写更少的代码</li><li>提供详细的运行日志</li><li>提供专门为接口设计的断言</li><li>强大的数据驱动</li><li>自动生成HTML/XML测试报告</li><li>支持生成随机数据</li><li>支持<code>har</code>/<code>swagger</code>文件转case</li><li>支持数据库操作</li></ul><p>这些是seldom支持的功能，我们只需要集成HTTP接口库，并提供强大的断言即可。<code>seldom 2.0</code> 加入了HTTP接口自动化测试支持。</p><p>Seldom 完全兼容 <a href="https://docs.python-requests.org/en/master/" target="_blank" rel="noopener noreferrer">Requests</a> API 如下:</p><table><thead><tr><th>seldom</th><th>requests</th></tr></thead><tbody><tr><td>self.get()</td><td>requests.get()</td></tr><tr><td>self.post()</td><td>requests.post()</td></tr><tr><td>self.put()</td><td>requests.put()</td></tr><tr><td>self.delete()</td><td>requests.delete()</td></tr><tr><td>self.patch()</td><td>requests.patch()</td></tr><tr><td>self.session()</td><td>requests.session()</td></tr></tbody></table><h2 id="seldom-vs-request-unittest" tabindex="-1"><a class="header-anchor" href="#seldom-vs-request-unittest"><span>Seldom VS Request+unittest</span></a></h2><ul><li>unittest + requests 接口自动化示例：</li></ul><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token keyword">import</span> unittest</span>
<span class="line"><span class="token keyword">import</span> requests</span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">TestAPI</span><span class="token punctuation">(</span>unittest<span class="token punctuation">.</span>TestCase<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">test_get_method</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        payload <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;key1&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;value1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;key2&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;value2&#39;</span><span class="token punctuation">}</span></span>
<span class="line">        r <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&quot;http://httpbin.org/get&quot;</span><span class="token punctuation">,</span> params<span class="token operator">=</span>payload<span class="token punctuation">)</span></span>
<span class="line">        self<span class="token punctuation">.</span>assertEqual<span class="token punctuation">(</span>r<span class="token punctuation">.</span>status_code<span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span></span>
<span class="line">    unittest<span class="token punctuation">.</span>main<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>seldom 接口自动化测试示例：</li></ul><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token comment"># test_req.py</span></span>
<span class="line"><span class="token keyword">import</span> seldom</span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">TestAPI</span><span class="token punctuation">(</span>seldom<span class="token punctuation">.</span>TestCase<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">test_get_method</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        payload <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;key1&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;value1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;key2&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;value2&#39;</span><span class="token punctuation">}</span></span>
<span class="line">        self<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&quot;http://httpbin.org/get&quot;</span><span class="token punctuation">,</span> params<span class="token operator">=</span>payload<span class="token punctuation">)</span></span>
<span class="line">        self<span class="token punctuation">.</span>assertStatusCode<span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span></span>
<span class="line">    seldom<span class="token punctuation">.</span>main<span class="token punctuation">(</span>debug<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>主要简化点在，接口的返回数据的处理。当然，seldom真正的优势在断言、日志和报告。</p><ul><li>运行日志</li></ul><p>打开debug模式<code>seldom.run(debug=True)</code> 运行上面的用例。</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"></span>
<span class="line"><span class="token operator">&gt;</span> python test_req.py</span>
<span class="line"></span>
<span class="line">              __    __</span>
<span class="line">   ________  / /___/ /___  ____ ____</span>
<span class="line">  / ___/ _ <span class="token punctuation">\\</span>/ / __  / __ <span class="token punctuation">\\</span>/ __ \` ___/</span>
<span class="line"> <span class="token punctuation">(</span>__  <span class="token punctuation">)</span>  __/ / /_/ / /_/ / / / / / /</span>
<span class="line">/____/<span class="token punctuation">\\</span>___/_/<span class="token punctuation">\\</span>__,_/<span class="token punctuation">\\</span>____/_/ /_/ /_/  v3.x.x</span>
<span class="line">-----------------------------------------</span>
<span class="line">                             @itest.info</span>
<span class="line"></span>
<span class="line">test_get_method <span class="token punctuation">(</span>test_req.TestAPI<span class="token punctuation">)</span> <span class="token punctuation">..</span>. <span class="token number">2023</span>-02-14 <span class="token number">23</span>:37:07 request.py <span class="token operator">|</span> INFO <span class="token operator">|</span></span>
<span class="line">-------------- Request -----------------<span class="token punctuation">[</span>🚀<span class="token punctuation">]</span></span>
<span class="line"><span class="token number">2023</span>-02-14 <span class="token number">23</span>:37:07 request.py <span class="token operator">|</span> INFO <span class="token operator">|</span> <span class="token punctuation">[</span>method<span class="token punctuation">]</span>: GET      <span class="token punctuation">[</span>url<span class="token punctuation">]</span>: http://httpbin.org/get</span>
<span class="line"><span class="token number">2023</span>-02-14 <span class="token number">23</span>:37:07 request.py <span class="token operator">|</span> DEBUG <span class="token operator">|</span> <span class="token punctuation">[</span>params<span class="token punctuation">]</span>:</span>
<span class="line"> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token string">&quot;key1&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;value1&quot;</span>,</span>
<span class="line">  <span class="token string">&quot;key2&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;value2&quot;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token number">2023</span>-02-14 <span class="token number">23</span>:37:08 request.py <span class="token operator">|</span> INFO <span class="token operator">|</span> -------------- Response ----------------<span class="token punctuation">[</span>🛬️<span class="token punctuation">]</span></span>
<span class="line"><span class="token number">2023</span>-02-14 <span class="token number">23</span>:37:08 request.py <span class="token operator">|</span> INFO <span class="token operator">|</span> successful with status <span class="token number">200</span></span>
<span class="line"><span class="token number">2023</span>-02-14 <span class="token number">23</span>:37:08 request.py <span class="token operator">|</span> DEBUG <span class="token operator">|</span> <span class="token punctuation">[</span>type<span class="token punctuation">]</span>: json      <span class="token punctuation">[</span>time<span class="token punctuation">]</span>: <span class="token number">0.785683</span></span>
<span class="line"><span class="token number">2023</span>-02-14 <span class="token number">23</span>:37:08 request.py <span class="token operator">|</span> DEBUG <span class="token operator">|</span> <span class="token punctuation">[</span>response<span class="token punctuation">]</span>:</span>
<span class="line"> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token string">&quot;args&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token string">&quot;key1&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;value1&quot;</span>,</span>
<span class="line">    <span class="token string">&quot;key2&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;value2&quot;</span></span>
<span class="line">  <span class="token punctuation">}</span>,</span>
<span class="line">  <span class="token string">&quot;headers&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token string">&quot;Accept&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;*/*&quot;</span>,</span>
<span class="line">    <span class="token string">&quot;Accept-Encoding&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;gzip, deflate&quot;</span>,</span>
<span class="line">    <span class="token string">&quot;Host&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;httpbin.org&quot;</span>,</span>
<span class="line">    <span class="token string">&quot;User-Agent&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;python-requests/2.28.1&quot;</span>,</span>
<span class="line">    <span class="token string">&quot;X-Amzn-Trace-Id&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;Root=1-63ebaaa4-325e25be64b104e770c25f8f&quot;</span></span>
<span class="line">  <span class="token punctuation">}</span>,</span>
<span class="line">  <span class="token string">&quot;origin&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;173.248.248.88&quot;</span>,</span>
<span class="line">  <span class="token string">&quot;url&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;http://httpbin.org/get?key1=value1&amp;key2=value2&quot;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token number">2023</span>-02-14 <span class="token number">23</span>:37:08 case.py <span class="token operator">|</span> INFO <span class="token operator">|</span> 👀 assertStatusCode -<span class="token operator">&gt;</span> <span class="token number">200</span>.</span>
<span class="line">ok</span>
<span class="line"></span>
<span class="line">----------------------------------------------------------------------</span>
<span class="line">Ran <span class="token number">1</span> <span class="token builtin class-name">test</span> <span class="token keyword">in</span> <span class="token number">0</span>.795s</span>
<span class="line"></span>
<span class="line">OK</span>
<span class="line"><span class="token number">2023</span>-02-14 <span class="token number">23</span>:37:08 runner.py <span class="token operator">|</span> SUCCESS <span class="token operator">|</span> A run the <span class="token builtin class-name">test</span> <span class="token keyword">in</span> debug mode without generating HTML report<span class="token operator">!</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>通过日志/报告都可以看到详细的HTTP接口调用信息。</p>`,17)]))}const o=n(p,[["render",l],["__file","start.html.vue"]]),u=JSON.parse('{"path":"/api-testing/start.html","title":"HTTP测试","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"优势","slug":"优势","link":"#优势","children":[]},{"level":2,"title":"Seldom VS Request+unittest","slug":"seldom-vs-request-unittest","link":"#seldom-vs-request-unittest","children":[]}],"git":{"updatedTime":1742121997000,"contributors":[{"name":"defnngj","username":"defnngj","email":"defnngj@gmail.com","commits":7,"url":"https://github.com/defnngj"}],"changelog":[{"hash":"ee7baed8f0cfa8c864d38c5c4149c1151a357c5e","time":1742121997000,"email":"defnngj@gmail.com","author":"defnngj","message":"📝 update doc"},{"hash":"2c342d84aaf411ed35284769a408a1f8745204b4","time":1709482499000,"email":"defnngj@gmail.com","author":"defnngj","message":"📝️ seldom -s2c doc"},{"hash":"32eb8a015671103364c9c7f9c119750343e97d7b","time":1678808578000,"email":"defnngj@gmail.com","author":"defnngj","message":"📝️  Function update doc"},{"hash":"45f6f437739728faf88bb93aaed9557a4056d552","time":1676471110000,"email":"defnngj@gmail.com","author":"defnngj","message":"📝️ update doc"},{"hash":"30b9e99e1192ae3cc750c4dd653f21d6e3364e31","time":1669220514000,"email":"defnngj@gmail.com","author":"defnngj","message":"📝️ update curl doc"},{"hash":"9e1a146a15aed812a1e4fa5a4e195733d76ae8ea","time":1667322855000,"email":"defnngj@gmail.com","author":"defnngj","message":"📝️ update doc(support seldom 3.0)"},{"hash":"8f0025aee78b42c6db150a5fdbddadfc6ddbba9f","time":1657640958000,"email":"defnngj@gmail.com","author":"defnngj","message":"📝 web and http doc"}]},"filePathRelative":"api-testing/start.md"}');export{o as comp,u as data};
